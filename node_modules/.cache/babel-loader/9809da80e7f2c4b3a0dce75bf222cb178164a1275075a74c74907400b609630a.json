{"ast":null,"code":"var _jsxFileName = \"/Users/Peter/monologue6/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [weatherData, setWeatherData] = useState(null);\n  const [error, setError] = useState(null);\n\n  // get 5 day forecast  \n  const locationKey = process.env.REACT_APP_LOCATION_KEY;\n  const apiKey = process.env.REACT_APP_API_KEY;\n  const apiUrl = `http://dataservice.accuweather.com/forecasts/v1/daily/5day/${locationKey}?apikey=${apiKey}&metric=false`;\n  useEffect(() => {\n    // Log values inside useEffect to confirm client-side execution\n    console.log(\"API Key:\", apiKey);\n    console.log(\"Location Key:\", locationKey);\n    console.log(\"API URL:\", apiUrl);\n    fetch(apiUrl).then(response => {\n      if (!response.ok) {\n        throw new Error('Failed to fetch weather data');\n      }\n      return response.json();\n    }).then(data => setWeatherData(data)).catch(error => setError(error.message));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"5-Day Weather Forecast\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), error ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this) : weatherData ? /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: weatherData.DailyForecasts.map((day, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: new Date(day.Date).toDateString()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Min: \", day.Temperature.Minimum.Value, \"\\xB0\", day.Temperature.Minimum.Unit]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Max: \", day.Temperature.Maximum.Value, \"\\xB0\", day.Temperature.Maximum.Unit]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: day.Day.IconPhrase\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 15\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading weather data...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"9qZc3hMYGZe2yPnJ+Iz9mpNmvKk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","jsxDEV","_jsxDEV","App","_s","weatherData","setWeatherData","error","setError","locationKey","process","env","REACT_APP_LOCATION_KEY","apiKey","REACT_APP_API_KEY","apiUrl","console","log","fetch","then","response","ok","Error","json","data","catch","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","DailyForecasts","map","day","index","Date","toDateString","Temperature","Minimum","Value","Unit","Maximum","Day","IconPhrase","_c","$RefreshReg$"],"sources":["/Users/Peter/monologue6/src/App.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport './App.css';\n\nfunction App() {\n  const [weatherData, setWeatherData] = useState(null);\n  const [error, setError] = useState(null);\n\n// get 5 day forecast  \nconst locationKey = process.env.REACT_APP_LOCATION_KEY;\nconst apiKey = process.env.REACT_APP_API_KEY;\nconst apiUrl = `http://dataservice.accuweather.com/forecasts/v1/daily/5day/${locationKey}?apikey=${apiKey}&metric=false`;\n\n  useEffect(() => {\n\n      // Log values inside useEffect to confirm client-side execution\n      console.log(\"API Key:\", apiKey);\n      console.log(\"Location Key:\", locationKey);\n      console.log(\"API URL:\", apiUrl);\n\n\n\n\n    fetch(apiUrl)\n      .then(response => {\n        if (!response.ok) {\n          throw new Error('Failed to fetch weather data');\n        }\n        return response.json();\n      })\n      .then(data => setWeatherData(data))\n      .catch(error => setError(error.message));\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <h1>5-Day Weather Forecast</h1>\n      {error ? (\n        <p>Error: {error}</p>\n      ) : weatherData ? (\n        <ul>\n          {weatherData.DailyForecasts.map((day, index) => (\n            <li key={index}>\n              <h2>{new Date(day.Date).toDateString()}</h2>\n              <p>Min: {day.Temperature.Minimum.Value}°{day.Temperature.Minimum.Unit}</p>\n              <p>Max: {day.Temperature.Maximum.Value}°{day.Temperature.Maximum.Unit}</p>\n              <p>{day.Day.IconPhrase}</p>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p>Loading weather data...</p>\n      )}\n    </div>\n  );\n}\n\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}